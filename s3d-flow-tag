#!/bin/bash
# shellcheck disable=SC2001
set -e

S3D_PRE_RELEASE_START="${S3D_PRE_RELEASE_START:-1000000}"

# Loop until we are able to tag and push
m=$(s3d-flow-json | jq -r .module)
v=$(s3d-flow-json | jq -r .latest)
v_=$(echo $v | sed 's/\./\\\./')
n=0
while [[ $n != 10 ]]; do
  n=$(( n + 1 ))

  # Get latest tags
  echo "FLOW: getting latest tags"
  git fetch ssh --tags

  # Check for an existing tag
  if [ -z "$S3D_ALLOW_REFLOW" ]; then
    echo "FLOW: checking for $v"
    release=$(s3d-flow-json | jq -r .release)
    if git tag -v "$release"; then
      echo "ERROR: $release tag already exists!"
      exit 1
    fi
  fi

  # Tag, push, describe and exit if we succeed
  echo "FLOW: tagging '$v'"
  if [[ "true" == "$(s3d-flow-json | jq -r .is_final)" ]]; then
    echo "FLOW: tagging as release"
    git tag -s -m 'release' "v$v" && git push --no-verify ssh "v$v" && exit 0
  else
    echo "FLOW: tagging as pre-release"
    git tag -s -m 'pre-release' "$v" && git push --no-verify ssh $v && exit 0
  fi

  # Delete the tag that we were not able to push
  git tag -d "$v" > /dev/null 2>&1 || true

  # Increment the pre-release number
  pre=$(echo "$v" | sed 's/.*-//')
  if [[ $pre == "$v" ]]; then
    echo "FLOW: FLOW FOR '$m' IS NOT STARTED!"
    exit 1
  fi

  pre=$(echo "$pre" | sed 's/[a-z]/0/g')
  echo "FLOW: incrementing pre '$pre'"
  if ! pre=$(( pre + 1 )); then
    echo "FLOW: inc failed"
     pre="$S3D_PRE_RELEASE_START"
  fi

  # Make sure the number is high enough to avoid collisions with pipelines
  if [[ $pre -lt "$S3D_PRE_RELEASE_START" ]]; then
    pre="$S3D_PRE_RELEASE_START"
  fi

  # Use sed to update CHANGES.md for an incremented pre-release number
  v2="$(echo "$v" | sed 's/-.*//')-$pre"
  v2_=$(echo "$v2" | sed 's/\./\\\./')
  sed -i -e 's/ '"$v_"'/ '"$v2_"'/' CHANGES.md
  { git reset HEAD^ && s3d-flow-commit; } > /dev/null
  v=$v2
  v_=$v2_
done

echo 'FLOW: tag failure!' >&2
exit 1
